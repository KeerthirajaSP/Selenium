Start Date-30th Jan 
End Date- 17th Feb 

30,31,1st Feb - 3.30pm-5.30pm
2nd Feb -17th - 10am - 12pm

-Core Java

S/w-

- openJdk 8 to latest
- Editor- Eclipse / Intellij
- Chrome browser

- Hands-on
- Case study
- Post assessment
- during the session- SME feedback

Coverage-

Selenium Introduction
Selenium features
Selenium components
Selenium IDE,RC,Grid
Selenium WebDriver
Junit/TestNg Framework
diff Locators used for handling elements
Mouse hover
Wait stt
Taking screenshot
Upload/Download a file
Config.prop
Cookies
Desired capabilities/ chrome options
POM
Datadriven
Database testing
Headless browsers

Manual testing-

Dev--->applns---> testers--->Test Case(ER=AR)

expected result- actual result---> If ER <>AR---> Rectify--->appln--->Dev

Automation testing-

Dev--->applns---> testers--->Tools--->Test Scripts(ER=AR)

expected result- actual result---> If ER <>AR---> Rectify--->appln--->Dev

Tools- Robot- instruction- Testers

Advantages-

1. reduce time/efforts

2. accurate results/reliable/trust

3. reuse/reusability

4. effective/efficiency

5. cost effective( which tool we work)

SDLC- S/w dev life cycle

Req gath& analysis
Design
Coding
Testing
implementation 
maintenance

-Waterfall
-Agile- 


Selenium-

1. Open source tool/ free / download - dont want to pay any amount

2. Seleniumhq.org---> selenium.dev

3. functional testing- test the behaviour of the appln.
   non-functional - compatability testing-testing the appln in diff platform(browser/ O/S)
   regression testing- testing the previously tested reqs when there is a change/modification is happened

1.test case- manual testing
login page- 100 tc - 99 tc passed- 1 tc failed- dev- rectify- 1 tc  defect is fixed-tester- 1 tc Passed

99 tc/test scripts again to be tested-
Test Suite file-collection of test scripts together / batch test 

2. v1.1
- reg
- login
- search

v1.2
-add to cart
-cancel
- history
-tracking

3. most of the programming/ scripting language can be used to test the appln

4. web based appln can only be tested

5. selenium suite of products- components
 - Selenium IDE
 - Selenium RC
 - Selenium WebDriver
 - Selenium Grid 

- Selenium IDE

Features-

add-on to firefox,chrome, edge 
GUI
easy to use
easy to learn

Recording option- based on the instruction the tester, tool is generate the script

Descriptive Programming-tester has to write his own scripts

Test Script-

activity to be performed on the element
to which element you want to perform the activity
if any value to be passed

disadvantages-

it is not supporting all the browsers

through recording we cannot add any looping/ conditional stts

we cannot perform database testing

we cannot perform datadriven testing

datadriven testing

myhcl login- 3 lk employees
single script - pass the n of value

Selenium RC- Selenium 1

Remote Control- Server

Tester-script-Java/python/ruby/C#----> Selenium RC( server)---> Appln(browser)

Features

it is supporting all the browsers

we can add any looping/ conditional stts

we can perform database testing

we can perform datadriven testing

disadvantage-

no direct communication b/w tester and appln

Selenium WebDriver-

Features

it is supporting all the browsers

we can add any looping/ conditional stts

we can perform database testing

we can perform datadriven testing

direct communication b/w tester and appln

Tester--->script---> java/Python/C#-----> Appln(browser) using webdriver

eg-
a=7 b=8
int a,b,c
c=a+b
print c

ER=15

a=7 b=8
int a,b,c
c=a+b
print c
C=AR

ER=AR

testing the code---> unit testing - first level of testing --> test the code( functionality of the code)

java code- java unit testing --> junit execution framework
C# code--> C# unit testing ---> nunit 

framework-template, standards, rules , guideliness 

hcl employee details - 3 lk data 

 text file - append, delete, create
 excel file -append, delete, create - table- template

Annotation- meta data, non-executable line,  info about below method/ lines of code

@Test
@beforeClass
@AfterClass
@Before
@After

Amazon login page

connection to db- beforeclass -
open browser and url- before 
close the url and browser- after
disconnection to db- afterclass

Test class-
-valid case
-invalid case

Assertions
ER=AR

- fail
-assertEquals 


package junit1;

import static org.junit.Assert.assertEquals;

import org.junit.Test;

public class CalculatorTest {

	Calculator calc=new Calculator();
	

	@Test
	public void test() {
	assertEquals(10,calc.add1(5, 5));
	
	}
	
	@Test
	public void test1() {
		assertEquals(0,calc.sub1(5, 5));
	}

}

Annotations Eg-

package junit1;

import static org.junit.Assert.*;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

public class Annotation1 {

	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
		System.out.println("before class starts");
	}

	@AfterClass
	public static void tearDownAfterClass() throws Exception {
		System.out.println("after class completes ");
	}

	@Before
	public void setUp() throws Exception {
		System.out.println("it will execute before @Test method");
	}

	@After
	public void tearDown() throws Exception {
		System.out.println("it will execute after each @test method");
	}

	

}

junit script-

package junit1;

import static org.junit.Assert.assertEquals;

import org.junit.Test;

public class CalculatorTest extends Annotation1 {

	Calculator calc=new Calculator();
	

	@Test
	public void test() {
	assertEquals(10,calc.add1(5, 5));
	System.out.println("add");
	}
	
	@Test
	public void test1() {
		assertEquals(0,calc.sub1(5, 5));
		System.out.println("sub");
	}

}

Test Suite-

collection of test case/ test script executed together- batch test

package junit1;

import org.junit.runner.RunWith;
import org.junit.runners.Suite;
import org.junit.runners.Suite.SuiteClasses;

@RunWith(Suite.class)
@SuiteClasses({ CalculatorTest.class, Test2.class,Test3.class })
public class AllTests {

}


@Ignore-

method , class level

package junit1;

import static org.junit.Assert.assertEquals;

import org.junit.Ignore;
import org.junit.Test;

@Ignore
public class CalculatorTest extends Annotation1 {

	Calculator calc=new Calculator();
	
    @Ignore
	@Test
	public void test() {
	assertEquals(10,calc.add1(5, 5));
	System.out.println("add");
	}
	
	@Test
	public void test1() {
		assertEquals(0,calc.sub1(5, 5));
		System.out.println("sub");
	}

}


TestNg- next generation 

1. Default report creation

2. More annotations compare to junit

3. how to create suite file( xml file)
Suite File- collection of tc/ts

<suite>
  <Test 1>
    <classes>
      <class 1> @Test methods
      <class 2>
  <Test 2>
  <Test 3>
</suite>


Eg-

Amazon appln

<suite>
  <Test 1 - amazon valid case>
    <classes>
      <class 1 -  @Test-login valid
      <class 2 - @Test - search 
  </classes>
 </Test>
   < Test 2 - amazon invalid case>

<classes>
      <class 1 -  @Test-login invalid
      <class 2 - @Test - invalid search 
  </classes>
 </Test>
</suite>

Eg-

package testng1;

import org.testng.annotations.Test;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.AfterSuite;

public class AnnotationsEg1 {
  
  @BeforeMethod
  public void beforeMethod() {
	  System.out.println("Before @Test methods execution");
  }

  @AfterMethod
  public void afterMethod() {
	  System.out.println("After @Test method completes its execution");
  }

  @BeforeClass
  public void beforeClass() {
	  System.out.println("Before class strts its execution");
  }

  @AfterClass
  public void afterClass() {
	  System.out.println("After all @Test method is completed");
  }

  @BeforeTest
  public void beforeTest() {
	  System.out.println("Before Test starts execution");
  }

  @AfterTest
  public void afterTest() {
	  System.out.println("After all the classess completed");
  }

  @BeforeSuite
  public void beforeSuite() {
	  System.out.println("Before Suite starts execution");
  }

  @AfterSuite
  public void afterSuite() {
	  System.out.println("After all the Test is completed ");
  }

}

Suite file-

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd">
<suite name="Suite1">
  <test name="Test">
    <classes>
      <class name="testng1.CalculatorTest"/>
     
    </classes>
  </test> <!-- Test -->
  <test name="Test1">
  <classes>
    <class name="testng1.NewTest1"/>
   </classes>
  
  
  </test>
</suite> <!-- Suite -->

4. depend on methods-

package testng1;

import org.testng.Assert;
import org.testng.annotations.Test;

public class NewTest1 extends AnnotationsEg1{
  @Test
  public void reg() {
	  Assert.fail();
	  System.out.println("reg method");
  }
  
  @Test(dependsOnMethods="reg")
  public void login() {
	  System.out.println("login method");
  }
  
  @Test(dependsOnMethods="login")
  public void searchofproducts() {
	  System.out.println("search of the products");
  }
}


5. priority - 

+ve , -ve, non- prioritize metjod value is 0
if more than one method having same value it will run alphabetical order

package testng1;

import org.testng.Assert;
import org.testng.annotations.Test;

public class NewTest1 extends AnnotationsEg1{
  @Test(priority=-1)
  public void reg() {
	  //Assert.fail();
	  System.out.println("reg method");
  }
  
  @Test(priority=2)
  public void login() {
	  System.out.println("login method");
  }
  
  @Test
  public void searchofproducts() {
	  System.out.println("search of the products");
  }
}


6.grouping

<groups>
<run>
<exclude name="smoke">
</exclude>
</run>

</groups>

7.parallel testing-

method, class , test level parallel execution

8.dataprovider

datadriven testing-
single fn- multiple set of value
my hcl login page - 3 lk employees

package testng1;

import org.testng.Assert;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import junit1.Calculator;

public class CalculatorTest extends AnnotationsEg1 {

	Calculator calc=new Calculator();

	// chrome browser login amazon- 
	@Test(dataProvider="dpadd")
	public void testadd1(int exp_value,int a ,int b) {
		//System.out.println("thread value"+ Thread.currentThread().getId());
		Assert.assertEquals(exp_value,calc.add1(a, b));  
		System.out.println("add");


	}
	
	@DataProvider(name="dpadd")
	public Object[][] getdata(){
		Object[][] t1=new Object[][] {
			{10,5,5},
			{20,10,10},
			{5,7,8},
			{3,8,0},
			{6,3,3},
			{9,5,8},
			{30,15,15}
		};
		
		return t1;
	}

}

WebDriver-

Tester--->script--->java--->junit/Testng execution framework--->Appln(browser)


locators- it is used to identify the element


name=q
locator type =locator value

locators types-

id
 unique identifier
id=value

name

name=value

cssSelector - value , id , name , style 

textbox 1 textbox 2

id , name , value , style - font, styles

cssSelector(tagname[att=value])

xpath

abs - /html/body/div[1]/div[5]/div[2]/div/div[1]/div/form/div[6]/div/input

rel -//tagname[@att='value']

1.if element attributes is dynamic but one of the value is constant

 name=user1 name=user3

rel - //tagname[contains-text(@name,'user')]
  

2. it is dynamic but value is not constant-
/following/ preceeding/sibling

  textbox name=user
2.textbox name-1/2/3

//tagname[@name='user']/input

3. if we want more than one attr to use for single ele

//tagname[@attribute=value and @attribute=value]

4.if ele att has space

id='      user   '

//tagname[normalize-space(@att,'value')]


regular expression - pattern matching - * - single char or more than char

tagname

textbox- type- sendKeys("value")

classname

linktext- <a>

linktext- text of the link

partiallinktext- 

partiallinktext- partial text of the link

package webdriver1;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;

public class Test1 {


	@Test
	public void f() {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();
		
		driver.get("https://www.leafground.com/input.xhtml;jsessionid=node0bh7gd14t3lcg1ylgpinayj7878652.node0");
		
		driver.findElement(By.id("j_idt88:name")).sendKeys("karthika");
		
		//driver.findElement(By.name("j_idt88:j_idt91")).clear();
		
		driver.findElement(By.name("j_idt88:j_idt91")).sendKeys(" India");
		
		boolean output=driver.findElement(By.id("j_idt88:j_idt93")).isEnabled();
		
		if(output==false) {
			System.out.println("text box is disabled");
		}}
}



Textbox-

package webdriver1;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;

public class Test1 {


	@Test
	public void f() throws InterruptedException {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();

		driver.get("https://www.leafground.com/input.xhtml;jsessionid=node0bh7gd14t3lcg1ylgpinayj7878652.node0");

		driver.findElement(By.id("j_idt88:name")).sendKeys("karthika");

		//driver.findElement(By.name("j_idt88:j_idt91")).clear();

		driver.findElement(By.name("j_idt88:j_idt91")).sendKeys(" India");

		boolean output=driver.findElement(By.id("j_idt88:j_idt93")).isEnabled();

		if(output==false) {
			System.out.println("text box is disabled");
		}

		String msginsidetextbox=	driver.findElement(By.cssSelector("input[id='j_idt88:j_idt97']")).getAttribute("value");


		System.out.println(msginsidetextbox);

		driver.findElement(By.xpath("//input[@id='j_idt88:j_idt99']")).sendKeys("karthika@hcl.com");

		driver.findElement(By.xpath("//input[@id='j_idt88:j_idt99']")).sendKeys(Keys.TAB);

		driver.findElement(By.xpath("//*[@id='j_idt88:j_idt103_toolbar']/span[1]/span[1]/span[1]")).click();

		driver.findElement(By.xpath("//*[@id=\"ql-picker-options-0\"]/span[3]")).click();

		driver.findElement(By.id("j_idt106:thisform:age")).sendKeys(Keys.ENTER);

		String msg=driver.findElement(By.xpath("//*[@id=\"j_idt106:thisform:j_idt110_error-detail\"]")).getText();

		System.out.println(msg);

		if(msg.equalsIgnoreCase("Age is mandatory")) {
			System.out.println("error msg displayed");
		}



		Point	pos=driver.findElement(By.id("j_idt106:float-input")).getLocation();

		int x=pos.getX();

		int y=pos.getY();

		System.out.println(x +" "+ y);

		Thread.sleep(20000);


		driver.findElement(By.xpath("//*[@id=\"j_idt106:auto-complete_input\"]")).sendKeys("karthika");

		Thread.sleep(20000);


		driver.findElement(By.xpath("//*[@id=\"j_idt106:auto-complete_panel\"]/ul/li[3]")).click();

	}
}


Buttons-

package webdriver1;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import junit.framework.Assert;

public class Test1 {


	@Test
	public void f() throws InterruptedException {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();

		driver.get("https://www.leafground.com/button.xhtml");
		
		String beforeclick=driver.getTitle();
		
		driver.findElement(By.id("j_idt88:j_idt90")).click();
		
		String afterclick=driver.getTitle();
		
		//Assert.assertEquals(beforeclick, afterclick);
		
		driver.navigate().back();
		
		String coloursavebtn=driver.findElement(By.id("j_idt88:j_idt96")).getCssValue("color");
		
		System.out.println(coloursavebtn);
		
		Dimension size=driver.findElement(By.id("j_idt88:j_idt98")).getSize();
		
		int he=size.height;
		
		int wi=size.width;
		
		System.out.println(he +" "+ wi);
		
		List<WebElement> ele=driver.findElements(By.xpath("/html/body/div[1]/div[5]/div[2]/form/div/div[2]/div[4]/button"));
		
		System.out.println(ele.size());
	}
}

Checkbox-

package webdriver1;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import junit.framework.Assert;

public class Test1 {


	@Test
	public void f() throws InterruptedException {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();

		driver.get("https://www.leafground.com/checkbox.xhtml;jsessionid=node0bidzhx9av54g16q6vq4oiffwj82041.node0");
		
		driver.findElement(By.xpath("//*[@id='j_idt87:j_idt89']/div[2]")).click();
		
		List<WebElement> ele=driver.findElements(By.xpath("/html/body/div[1]/div[5]/div[2]/form/div/div[1]/div[3]/div/div/table/tbody/tr/td/div/div[2]"));
		
		 for (WebElement click1:ele){
			 
			 click1.click();
		 }
		 
		 driver.findElement(By.xpath("//*[@id=\"j_idt87:j_idt100\"]")).click();
		 
		 driver.findElement(By.xpath("//*[@id=\"j_idt87:multiple\"]/div[3]")).click();
		 
		 driver.findElement(By.xpath("//*[@id=\"j_idt87:multiple_panel\"]/div[2]/ul/li[3]/div/div[2]")).click();
		 
		 driver.findElement(By.xpath("//*[@id=\"j_idt87:multiple_panel\"]/div[2]/ul/li[7]/div/div[2]")).click();
		 
		 driver.switchTo().defaultContent();
		 	
	}
}


Radio button-

package webdriver1;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import junit.framework.Assert;

public class Test1 {


	@Test
	public void f() throws InterruptedException {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();

		driver.get("https://www.leafground.com/radio.xhtml");
	
		driver.findElement(By.xpath("//*[@id=\"j_idt87:console1\"]/tbody/tr/td[2]/div/div[2]")).click();
		 
		
		
		List<WebElement> radio1=driver.findElements(By.xpath("/html/body/div[1]/div[5]/div[2]/form/div/div[2]/div[1]/div/div/table/tbody/tr/td/div/div[1]/input"));
		
		 for(WebElement el:radio1) {
	 
			boolean selectedradiobtn=el.isSelected(); 
			
			//System.out.println(selectedradiobtn);
			
			String options=el.getAttribute("value");
			
			//System.out.println(options);
			
			if (selectedradiobtn==true) {
				
				System.out.println(options+" "+" radio is button is selected");
				
				
			}
			
			
			 
		 }

		
	
	
	}
}


Links-

package webdriver1;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import junit.framework.Assert;

public class Test1 {


	@Test
	public void f() throws InterruptedException {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();

		driver.get("https://www.leafground.com/link.xhtml");

		driver.findElement(By.linkText("Go to Dashboard")).click();

		driver.navigate().back();

		String destpage=	driver.findElement(By.linkText("Find the URL without clicking me.")).getAttribute("href");
		
		System.out.println(destpage);	

		//String Basepage=driver.getTitle();

		driver.findElement(By.linkText("Broken?")).click();
		
		String destpage1=driver.getTitle();
		
		Assert.assertEquals("Error 404 /lists.xhtml Not Found in ExternalContext as a Resource", destpage1);
		
		driver.navigate().back();
		
	List<WebElement> links=	driver.findElements(By.tagName("a"));
		
		System.out.println(links.size());
		
		
		
		
		
		
		




	}




}

drop down list box-

Select 

methods-

selectbyvisibletext

Selectbyindex

selectbyvalue

ismultiple

deselectbyvisibletext

deSelectbyindex

deselectbyvalue

deselectAll 

package webdriver1;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import junit.framework.Assert;

public class Test1 {


	@Test
	public void f() throws InterruptedException {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();

		driver.get("https://www.leafground.com/select.xhtml");
		
		Select drop=new Select(driver.findElement(By.xpath("//*[@id=\"j_idt87\"]/div/div[1]/div[1]/div/div/select")));

		drop.selectByVisibleText("Puppeteer");
		
		drop.selectByIndex(2);
		
		System.out.println(drop.isMultiple());
		
		driver.findElement(By.id("j_idt87:country")).click();
		
		driver.findElement(By.xpath("//*[@id=\"j_idt87:country_3\"]")).click();
		
		Thread.sleep(20000);
		
		driver.findElement(By.id("j_idt87:city")).click();
		
		driver.findElement(By.xpath("//*[@id=\"j_idt87:city_2\"]")).click();
		
		
		
		//Select drop1=new Select(driver.findElement(By.xpath("/html/body/div[1]/div[5]/div[2]/form/div/div[1]/div[2]/div/div/div/div[2]/select")));
		
		//drop1.selectByValue("India");
		




	}




}



Table-

package webdriver1;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import junit.framework.Assert;

public class Test1 {


	@Test
	public void f() throws InterruptedException {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();

		driver.get("https://www.leafground.com/table.xhtml");
		
		List<WebElement> rows=driver.findElements(By.xpath("//*[@id='form:j_idt89_data']/tr/td[1]"));
		
		System.out.println(rows.size());
		
		List<WebElement> col=driver.findElements(By.xpath("/html/body/div[1]/div[5]/div[2]/form/div/div/div/div/div[2]/div/table/thead/tr/th"));
	
		System.out.println(col.size());
		
		
		String name=driver.findElement(By.xpath("//*[@id=\"form:j_idt89_data\"]/tr[2]/td[1]")).getText();
		
		String doj=driver.findElement(By.xpath("//*[@id=\"form:j_idt89_data\"]/tr[2]/td[4]")).getText();
		
		
		System.out.println("Name of the person is"+ name + " date of joining is "+ doj);
	}
	




}


Grid-

	package webdriver1;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import junit.framework.Assert;

public class Test1 {


	@Test
	public void f() throws InterruptedException {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();

		driver.get("https://www.leafground.com/grid.xhtml");
		
	   
		driver.findElement(By.xpath("//*[@id=\"form:dt-products_1000_checkbox\"]")).click();
	}
}


JavascriptExecutor-

package webdriver1;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import junit.framework.Assert;

public class Test1 {


	@Test
	public void f() throws InterruptedException {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();

		driver.get("https://demo.automationtesting.in/Datepicker.html");
		
	   
		
		JavascriptExecutor js=(JavascriptExecutor) driver;
		
		js.executeScript("document.getElementById('datepicker1').value='29/08/2017'");
		
		js.executeScript("document.getElementById('datepicker2').value='29/08/2017'");
		
		
		
		
		
	}
}


Scroll the page and within the page-

package webdriver1;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import junit.framework.Assert;

public class Test1 {


	@Test
	public void f() throws InterruptedException {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();

		driver.get("http://manos.malihu.gr/repository/custom-scrollbar/demo/examples/complete_examples.html");
		
	   WebElement el=driver.findElement(By.xpath("/html/body/div[2]/section/div[3]/div[1]/div/p[6]/input"));
	   
		
		JavascriptExecutor js=(JavascriptExecutor) driver;
		
		//js.executeScript("scroll(0,1500)");
		
		js.executeScript("arguments[0].scrollIntoView(true)",el);
		
		el.sendKeys("hcl");
		
		
		
		
		
		
		
		
	}
}


Alerts-

switchTo.alert

ok-accept
text the text- getText
cancel-dismiss

package webdriver1;

import java.util.List;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import junit.framework.Assert;

public class Test1 {


	@Test
	public void f() throws InterruptedException {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();

		driver.get("https://www.leafground.com/alert.xhtml;jsessionid=node0gpjx5n6ed5ub1dj8qc41heg2t86622.node0");



		driver.findElement(By.id("j_idt88:j_idt91")).click();
		
		Alert al=driver.switchTo().alert();
		
		System.out.println(al.getText());
		
		al.accept();
		
		driver.findElement(By.id("j_idt88:j_idt93")).click();
		
		
		al.dismiss();
		
		driver.findElement(By.id("j_idt88:j_idt104")).click();
		
		al.sendKeys("hcl");
		
		al.accept();
		
		driver.findElement(By.id("j_idt88:j_idt95")).click();
		
		driver.findElement(By.id("j_idt88:j_idt98")).click();
		
		
		
		
		
		
		









	}
}




frames-page within page

switchTo().frames(name,index,webelement)

package webdriver1;

import java.util.List;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import junit.framework.Assert;

public class Test1 {


	@Test
	public void f() throws InterruptedException {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();

		driver.get("https://www.leafground.com/frame.xhtml");
		
		driver.switchTo().frame(0);

        driver.findElement(By.id("Click")).click();		
		
		driver.switchTo().defaultContent();
		
		WebElement el1=driver.findElement(By.xpath("//*[@id=\"j_idt88\"]/div/div[2]/div/iframe"));
		
		driver.switchTo().frame(el1);
		
		driver.switchTo().frame("frame2");
		
		driver.findElement(By.id("Click")).click();
		
		//driver.switchTo().parentFrame();
		
		driver.switchTo().defaultContent();
		
		List<WebElement> frames=driver.findElements(By.tagName("iframe"));
		
		System.out.println(frames.size());
		
		
		
		
		
		
		
		









	}
}

every browser- unique session id value will be stored

getWindowHandles-unique session id value of the browsers

package webdriver1;

import java.util.Iterator;
import java.util.List;
import java.util.Set;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import junit.framework.Assert;

public class Test1 {


	@Test
	public void f() throws InterruptedException {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();

		driver.get("https://www.leafground.com/window.xhtml");
		
		System.out.println(driver.getTitle());
		
		driver.findElement(By.id("j_idt88:new")).click();
		
		Set<String> windowvalues=driver.getWindowHandles();
		
		Iterator<String> iter=windowvalues.iterator();
		
		String w1=iter.next();
		
		String w2=iter.next();
		
		driver.switchTo().window(w2);
		
		System.out.println(w1);
		
		System.out.println(w2);
		
		System.out.println(driver.getTitle());
		
		driver.close();
		
	
		
		driver.switchTo().window(w1);
		
		System.out.println(driver.getTitle());
		
		
		
		
		
		
		
		
		
		
		
		
		









	}
}



Actions class-

keyboard operations , mouse hover 

package webdriver1;

import java.util.Iterator;
import java.util.List;
import java.util.Set;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import junit.framework.Assert;

public class Test1 {


	@Test
	public void f() throws InterruptedException {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();

		driver.get("https://www.leafground.com/dashboard.xhtml");
		
		WebElement el=driver.findElement(By.id("email"));
		
		Actions act=new Actions(driver);
		
		act.sendKeys(el,"karthika@hcl.com")
		   .doubleClick()
		   .contextClick()
		   .build().perform();
	}
}

drag and drop-

package webdriver1;

import java.util.Iterator;
import java.util.List;
import java.util.Set;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import junit.framework.Assert;

public class Test1 {


	@Test
	public void f() throws InterruptedException {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();

		driver.get("https://www.leafground.com/drag.xhtml");
		
		WebElement drag=driver.findElement(By.id("form:conpnl_content"));
		
		Actions act=new Actions(driver);
		
		act.dragAndDropBy(drag, 250,0).build().perform();
		
		WebElement drag1=driver.findElement(By.id("form:drag_content"));
		
		WebElement dest=driver.findElement(By.id("form:drop_header"));
		
		act.dragAndDrop(drag1, dest).build().perform();
				
				
		
		
		
		
		
		
		
		









	}
}

List-

package webdriver1;

import java.util.Iterator;
import java.util.List;
import java.util.Set;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import junit.framework.Assert;

public class Test1 {


	@Test
	public void f() throws InterruptedException {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();

		driver.get("https://www.leafground.com/list.xhtml;jsessionid=node01dyiruxzjyldbsmw6iagv15th88947.node0");

		List<WebElement>list=driver.findElements(By.xpath("//*[@id=\"j_idt111\"]/div/div[2]/ul/li"));


		System.out.println(list.size());
		
		Actions act=new Actions(driver);
		
		act.keyDown(Keys.CONTROL)
		   .click(list.get(0))
		   .click(list.get(2))
		   .click(list.get(4))
		   .build().perform();
		
		







	}
}

list with position dynamic-

package webdriver1;

import java.util.Iterator;
import java.util.List;
import java.util.Set;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import junit.framework.Assert;

public class Test1 {


	@Test
	public void f() throws InterruptedException {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();

		driver.get("https://demo.automationtesting.in/AutoComplete.html");

		driver.findElement(By.id("searchbox")).sendKeys("ind");
		
        Thread.sleep(20000);
		
		List<WebElement>countryvalue=driver.findElements(By.xpath("//*[@id=\"ui-id-1\"]/li"));
		
		System.out.println(countryvalue.size());
		
		for(WebElement el1:countryvalue) {
			
		    if(el1.getText().equalsIgnoreCase("india")) {
		    	el1.click();
		    	break;
		    }
		}
		
		







	}
}

tree-

package webdriver1;

import java.util.Iterator;
import java.util.List;
import java.util.Set;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import junit.framework.Assert;

public class Test1 {


	@Test
	public void f() throws InterruptedException {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();

		driver.get("https://www.leafground.com/tree.xhtml");

		driver.findElement(By.xpath("//*[@id=\"j_idt88:0\"]/div/span[1]")).click();
		
		driver.findElement(By.xpath("//*[@id=\"j_idt98_node_0\"]/td[1]/span")).click();
		
		driver.findElement(By.xpath("/html/body/div[1]/div[5]/div[2]/div/div[2]/div/div/table/tbody/tr[1]/td[1]/div/div")).click();

        driver.findElement(By.xpath("//*[@id=\"j_idt107\"]/table/tbody/tr/td[1]/div/span[1]")).click();
        





	}
}

message-



File download-

package webdriver1;

import java.io.File;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import junit.framework.Assert;

public class Test1 {


	@Test
	public void f() throws InterruptedException {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();

		driver.get("https://www.leafground.com/file.xhtml");

		driver.findElement(By.id("j_idt88:j_idt89_input")).sendKeys("C:\\Users\\skarthika\\OneDrive - HCL Technologies Ltd\\Desktop\\Dreyfus Rating\\New folder\\desktop\\12.txt");		
		
		driver.findElement(By.id("j_idt93:j_idt95")).click();
		
		File filepath=new File("C:\\Users\\skarthika\\Downloads");
		
		File[] listfiles=filepath.listFiles();
		
		
		for(File filename:listfiles) {
			
			if(filename.getName().equalsIgnoreCase("TestLeaf Logo (5).png"))
			{
				
				System.out.println("File downloaded");
			}
		}
		
		
		

	}
}

Takescreenshot & Robot class- 

package webdriver1;

import java.awt.AWTException;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import javax.imageio.ImageIO;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.Point;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.io.FileHandler;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import junit.framework.Assert;

public class Test1 {


	@Test
	public void f() throws InterruptedException, IOException, AWTException {

		//Method-1

		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\skarthika\\Downloads\\chromedriver_win32 (7)\\chromedriver.exe");




		//Method-2

		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();

		driver.get("https://www.leafground.com/charts.xhtml");

		TakesScreenshot tk=(TakesScreenshot) driver;

		File Source=tk.getScreenshotAs(OutputType.FILE);

		File Destination=new File("C:\\Users\\skarthika\\OneDrive - HCL Technologies Ltd\\Desktop\\reports\\screen1.png");

		FileHandler.copy(Source, Destination);


		Robot r1=new Robot();

		Dimension scsize=	Toolkit.getDefaultToolkit().getScreenSize();

		Rectangle rect=new Rectangle(scsize);
		
	BufferedImage Source1=	r1.createScreenCapture(rect);
	
	File Destination1=new File("C:\\Users\\skarthika\\OneDrive - HCL Technologies Ltd\\Desktop\\reports\\screen2.png");
	
	ImageIO.write(Source1, "png",Destination1 );

	}
}

Selenium Advanced-

Framework-
 template, design, structure, standard, blue print, set of guideliness

organised
structure
reusable
reptition of task avoided
manage
rules
standards

POM - Page object model - design pattern

Sc-
appln v1.1

- reg
- login
 4 class created- +ve, -ve,alt,exception  Username- id-user - 5 times 
- search
- add to cart
- payment

v1.2

single page UI change to login 
       username
- id-customer-vendor-admin

* OR - object repository class
  elements - locators & attribute
* Functionality class
  elements- behaviour


Functionality-

package functionality;

import java.awt.AWTException;
import java.io.IOException;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import objectrepository.Elements;

public class Login {

	@Test
	public void f() {


		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();
		
		driver.get("https://ksrtc.in/oprs-web/login/show.do");
		
		//Elements el=new Elements();
		
		Elements.us(driver).sendKeys("karthika@hclc.om");
		Elements.pswd(driver).sendKeys("sjsjfs");
		Elements.loginbtn(driver).click();


	}
}

Elements-

package objectrepository;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

public class Elements {


	public static WebElement us(WebDriver driver) {
		return driver.findElement(By.id("userName"));

	}

	public static WebElement pswd(WebDriver driver) {
		return driver.findElement(By.name("password"));
	}

	public static WebElement loginbtn(WebDriver driver) {
		return driver.findElement(By.xpath("//*[@id=\"submitBtn\"]"));
	}

}

POM with Page Factory -

enhance the  POM -

Elements-

package objectrepository;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;

public class Elements {
	
	
	
	@FindBy(id="userName")
	public static WebElement us;
	
	@FindBy(name="password")
	public static WebElement pswd;
	
	@FindBy(xpath="//*[@id='submitBtn']")
	public static WebElement loginbtn;

}


Functionality-

package functionality;

import java.awt.AWTException;
import java.io.IOException;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.PageFactory;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import objectrepository.Elements;

public class Login {

	@Test
	public void f() {


		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();
		
		driver.get("https://ksrtc.in/oprs-web/login/show.do");
		
		//Elements el=new Elements();
		
		PageFactory.initElements(driver, Elements.class);
		
		Elements.us.sendKeys("karthika@hclc.om");
		Elements.pswd.sendKeys("sjsjfs");
		Elements.loginbtn.click();


	}
}
Datadriven framework-

excel 

dependency-

1.jxl- version -97-2003 .xls
2.apache poi lib file
 97- 2003 .xls -
 HSSF - horrible strict stlye format
 above 07 .xlsx - 
 XSSF - xml strict style format

Datadriven functionality-

package functionality;

import java.awt.AWTException;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.PageFactory;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import objectrepository.Elements;

public class Login {

	@Test
	public void f() throws IOException {


		WebDriverManager.chromedriver().setup();

		WebDriver driver;

		driver=new ChromeDriver();
		
		FileInputStream fi=new FileInputStream("C:\\Users\\skarthika\\OneDrive - HCL Technologies Ltd\\Documents\\datadriven31.xlsx");
		
		XSSFWorkbook w1=new XSSFWorkbook(fi);
		
		XSSFSheet s1=w1.getSheetAt(0);
		
		for(int i=1;i<=s1.getLastRowNum();i++) {
			
		XSSFRow r1=s1.getRow(i);
		
		String username=r1.getCell(0).getStringCellValue();
		
		String password=r1.getCell(1).getStringCellValue();
		
		driver.get("https://ksrtc.in/oprs-web/login/show.do");
		
		//Elements el=new Elements();
		
		PageFactory.initElements(driver, Elements.class);
		
		Elements.us.sendKeys(username);
		Elements.pswd.sendKeys(password);
		Elements.loginbtn.click();


	}
}}

Config.properties

Functionality-

package functionality;

import java.awt.AWTException;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Properties;

import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.ie.InternetExplorerDriver;
import org.openqa.selenium.support.PageFactory;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import objectrepository.Elements;

public class Login {

	@Test
	public void f() throws IOException {

		WebDriver driver;
		FileInputStream f2=new FileInputStream("src/test/java/Config.properties");

		Properties prop=new Properties();

		prop.load(f2);

		String browsername=prop.getProperty("browser");

		String path=prop.getProperty("excelpath");
		
		String username=prop.getProperty("username");
		
		String pswd=prop.getProperty("password");

		if(browsername.equalsIgnoreCase("chrome")) {


			WebDriverManager.chromedriver().setup();



			driver=new ChromeDriver();
		}

		else if( browsername.equalsIgnoreCase("firefox")) {

			WebDriverManager.firefoxdriver().setup();

			driver=new FirefoxDriver();
		}

		else if(browsername.equalsIgnoreCase("edge")) {
			WebDriverManager.edgedriver().setup();

			driver=new EdgeDriver();


		}

		else {

			WebDriverManager.iedriver().setup();

			driver=new InternetExplorerDriver();
		}

		/*FileInputStream fi=new FileInputStream(path);

		XSSFWorkbook w1=new XSSFWorkbook(fi);

		XSSFSheet s1=w1.getSheetAt(0);

		for(int i=1;i<=s1.getLastRowNum();i++) {

			XSSFRow r1=s1.getRow(i);

			String username=r1.getCell(0).getStringCellValue();

			String password=r1.getCell(1).getStringCellValue();

*/
			driver.get("https://ksrtc.in/oprs-web/login/show.do");

			//Elements el=new Elements();

			PageFactory.initElements(driver, Elements.class);

			Elements.us.sendKeys(username);
			Elements.pswd.sendKeys(pswd);
			Elements.loginbtn.click();


		}
	}

Config.properties-

browser=edge
excelpath=C:\\Users\\skarthika\\OneDrive - HCL Technologies Ltd\\Documents\\datadriven31.xlsx
username=karthika
password=hcl123





Cookies
Chromeoptions
Wait stt
Database testing
Headless browsers








